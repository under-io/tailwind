/* eslint-disable perfectionist/sort-objects */
/* eslint-disable @typescript-eslint/naming-convention */
import './index.css'

export const config = {
  extend: {
    fontFamily: {
      inter: ['Inter', 'sans-serif'],
      manrope: ['Manrope', 'sans-serif'],
    },
    colors: {
      brand: {
        50: 'rgb(var(--color-primary-50) / <alpha-value>)',
        100: 'rgb(var(--color-primary-100) / <alpha-value>)',
        200: 'rgb(var(--color-primary-200) / <alpha-value>)',
        300: 'rgb(var(--color-primary-300) / <alpha-value>)',
        400: 'rgb(var(--color-primary-400) / <alpha-value>)',
        500: 'rgb(var(--color-primary-500) / <alpha-value>)',
        600: 'rgb(var(--color-primary-600) / <alpha-value>)',
        700: 'rgb(var(--color-primary-700) / <alpha-value>)',
        800: 'rgb(var(--color-primary-800) / <alpha-value>)',
        900: 'rgb(var(--color-primary-900) / <alpha-value>)',
      },
      slate: {
        50: 'rgb(var(--color-slate-50) / <alpha-value>)',
        100: 'rgb(var(--color-slate-100) / <alpha-value>)',
        200: 'rgb(var(--color-slate-200) / <alpha-value>)',
        300: 'rgb(var(--color-slate-300) / <alpha-value>)',
        400: 'rgb(var(--color-slate-400) / <alpha-value>)',
        500: 'rgb(var(--color-slate-500) / <alpha-value>)',
        600: 'rgb(var(--color-slate-600) / <alpha-value>)',
        700: 'rgb(var(--color-slate-700) / <alpha-value>)',
        800: 'rgb(var(--color-slate-800) / <alpha-value>)',
        900: 'rgb(var(--color-slate-900) / <alpha-value>)',
      },
      blue: {
        50: 'rgb(var(--color-blue-50) / <alpha-value>)',
        100: 'rgb(var(--color-blue-100) / <alpha-value>)',
        200: 'rgb(var(--color-blue-200) / <alpha-value>)',
        300: 'rgb(var(--color-blue-300) / <alpha-value>)',
        400: 'rgb(var(--color-blue-400) / <alpha-value>)',
        500: 'rgb(var(--color-blue-500) / <alpha-value>)',
        600: 'rgb(var(--color-blue-600) / <alpha-value>)',
        700: 'rgb(var(--color-blue-700) / <alpha-value>)',
        800: 'rgb(var(--color-blue-800) / <alpha-value>)',
        900: 'rgb(var(--color-blue-900) / <alpha-value>)',
      },
      red: {
        50: 'rgb(var(--color-red-50) / <alpha-value>)',
        100: 'rgb(var(--color-red-100) / <alpha-value>)',
        200: 'rgb(var(--color-red-200) / <alpha-value>)',
        300: 'rgb(var(--color-red-300) / <alpha-value>)',
        400: 'rgb(var(--color-red-400) / <alpha-value>)',
        500: 'rgb(var(--color-red-500) / <alpha-value>)',
        600: 'rgb(var(--color-red-600) / <alpha-value>)',
        700: 'rgb(var(--color-red-700) / <alpha-value>)',
        800: 'rgb(var(--color-red-800) / <alpha-value>)',
        900: 'rgb(var(--color-red-900) / <alpha-value>)',
      },
      orange: {
        50: 'rgb(var(--color-orange-50) / <alpha-value>)',
        100: 'rgb(var(--color-orange-100) / <alpha-value>)',
        200: 'rgb(var(--color-orange-200) / <alpha-value>)',
        300: 'rgb(var(--color-orange-300) / <alpha-value>)',
        400: 'rgb(var(--color-orange-400) / <alpha-value>)',
        500: 'rgb(var(--color-orange-500) / <alpha-value>)',
        600: 'rgb(var(--color-orange-600) / <alpha-value>)',
        700: 'rgb(var(--color-orange-700) / <alpha-value>)',
        800: 'rgb(var(--color-orange-800) / <alpha-value>)',
        900: 'rgb(var(--color-orange-900) / <alpha-value>)',
      },
      yellow: {
        50: 'rgb(var(--color-yellow-50) / <alpha-value>)',
        100: 'rgb(var(--color-yellow-100) / <alpha-value>)',
        200: 'rgb(var(--color-yellow-200) / <alpha-value>)',
        300: 'rgb(var(--color-yellow-300) / <alpha-value>)',
        400: 'rgb(var(--color-yellow-400) / <alpha-value>)',
        500: 'rgb(var(--color-yellow-500) / <alpha-value>)',
        600: 'rgb(var(--color-yellow-600) / <alpha-value>)',
        700: 'rgb(var(--color-yellow-700) / <alpha-value>)',
        800: 'rgb(var(--color-yellow-800) / <alpha-value>)',
        900: 'rgb(var(--color-yellow-900) / <alpha-value>)',
      },
      green: {
        50: 'rgb(var(--color-green-50) / <alpha-value>)',
        100: 'rgb(var(--color-green-100) / <alpha-value>)',
        200: 'rgb(var(--color-green-200) / <alpha-value>)',
        300: 'rgb(var(--color-green-300) / <alpha-value>)',
        400: 'rgb(var(--color-green-400) / <alpha-value>)',
        500: 'rgb(var(--color-green-500) / <alpha-value>)',
        600: 'rgb(var(--color-green-600) / <alpha-value>)',
        700: 'rgb(var(--color-green-700) / <alpha-value>)',
        800: 'rgb(var(--color-green-800) / <alpha-value>)',
        900: 'rgb(var(--color-green-900) / <alpha-value>)',
      },
      teal: {
        50: 'rgb(var(--color-teal-50) / <alpha-value>)',
        100: 'rgb(var(--color-teal-100) / <alpha-value>)',
        200: 'rgb(var(--color-teal-200) / <alpha-value>)',
        300: 'rgb(var(--color-teal-300) / <alpha-value>)',
        400: 'rgb(var(--color-teal-400) / <alpha-value>)',
        500: 'rgb(var(--color-teal-500) / <alpha-value>)',
        600: 'rgb(var(--color-teal-600) / <alpha-value>)',
        700: 'rgb(var(--color-teal-700) / <alpha-value>)',
        800: 'rgb(var(--color-teal-800) / <alpha-value>)',
        900: 'rgb(var(--color-teal-900) / <alpha-value>)',
      },
      indigo: {
        50: 'rgb(var(--color-indigo-50) / <alpha-value>)',
        100: 'rgb(var(--color-indigo-100) / <alpha-value>)',
        200: 'rgb(var(--color-indigo-200) / <alpha-value>)',
        300: 'rgb(var(--color-indigo-300) / <alpha-value>)',
        400: 'rgb(var(--color-indigo-400) / <alpha-value>)',
        500: 'rgb(var(--color-indigo-500) / <alpha-value>)',
        600: 'rgb(var(--color-indigo-600) / <alpha-value>)',
        700: 'rgb(var(--color-indigo-700) / <alpha-value>)',
        800: 'rgb(var(--color-indigo-800) / <alpha-value>)',
        900: 'rgb(var(--color-indigo-900) / <alpha-value>)',
      },
      purple: {
        50: 'rgb(var(--color-purple-50) / <alpha-value>)',
        100: 'rgb(var(--color-purple-100) / <alpha-value>)',
        200: 'rgb(var(--color-purple-200) / <alpha-value>)',
        300: 'rgb(var(--color-purple-300) / <alpha-value>)',
        400: 'rgb(var(--color-purple-400) / <alpha-value>)',
        500: 'rgb(var(--color-purple-500) / <alpha-value>)',
        600: 'rgb(var(--color-purple-600) / <alpha-value>)',
        700: 'rgb(var(--color-purple-700) / <alpha-value>)',
        800: 'rgb(var(--color-purple-800) / <alpha-value>)',
        900: 'rgb(var(--color-purple-900) / <alpha-value>)',
      },
    },
    textColor: {
      primary: 'rgb(var(--color-text-primary) / <alpha-value>)',
      secondary: 'rgb(var(--color-text-secondary) / <alpha-value>)',
      tertiary: 'rgb(var(--color-text-tertiary) / <alpha-value>)',
      quaternary: 'rgb(var(--color-text-quaternary) / <alpha-value>)',
      disabled: 'rgb(var(--color-text-disabled) / <alpha-value>)',
      placeholder: 'rgb(var(--color-text-placeholder) / <alpha-value>)',
    },
    backgroundColor: {
      primary: 'rgb(var(--color-bg-primary) / <alpha-value>)',
      primary_hover: 'rgb(var(--color-bg-primary_hover) / <alpha-value>)',
      primary_solid: 'rgb(var(--color-bg-primary_solid) / <alpha-value>)',
      secondary: 'rgb(var(--color-bg-secondary) / <alpha-value>)',
      secondary_hover: 'rgb(var(--color-bg-secondary_hover) / <alpha-value>)',
      secondary_solid: 'rgb(var(--color-bg-secondary_solid) / <alpha-value>)',
      tertiary: 'rgb(var(--color-bg-tertiary) / <alpha-value>)',
      quaternary: 'rgb(var(--color-bg-quaternary) / <alpha-value>)',
      disabled: 'rgb(var(--color-bg-disabled) / <alpha-value>)',
      disabled_subtle: 'rgb(var(--color-bg-disabled_subtle) / <alpha-value>)',
    },
    backgroundImage: {
      brand_transparent: "url('../assets/logo/brand/transparent.svg')",
      auth_login: "url('../assets/bg/auth-login.svg')",
    },
    borderColor: {
      primary: 'rgb(var(--color-border-primary) / <alpha-value>)',
      primary_hover: 'rgb(var(--color-border-primary_hover) / <alpha-value>)',
      secondary: 'rgb(var(--color-border-secondary) / <alpha-value>)',
      tertiary: 'rgb(var(--color-border-tertiary) / <alpha-value>)',
      disabled: 'rgb(var(--color-border-disabled) / <alpha-value>)',
      disabled_subtle: 'rgb(var(--color-border-disabled_subtle) / <alpha-value>)',
      // brand: 'rgb(var(--color-border-brand) / <alpha-value>)',
      // brand_solid: 'rgb(var(--color-border-brand_solid) / <alpha-value>)',
      error: 'rgb(var(--color-border-error) / <alpha-value>)',
      error_solid: 'rgb(var(--color-border-error_solid) / <alpha-value>)',
    },
  },
}
/* eslint-enable @typescript-eslint/naming-convention */
/* eslint-enable perfectionist/sort-objects */
